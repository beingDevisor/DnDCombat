/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dndcombat;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author icecr
 */
public class MainWindow extends javax.swing.JFrame {

    Model model;
    DefaultListModel playerInventory = new DefaultListModel();
    DefaultListModel partyList = new DefaultListModel();

    /**
     * Creates new form MainWindow
     */
    public MainWindow(Model model) {
        initComponents();
        this.model = model;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPlayerPanel = new javax.swing.JPanel();
        jPlayerNameLabel = new javax.swing.JLabel();
        jPlayerHealthProgressBar = new javax.swing.JProgressBar();
        jPlayerHealthLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPlayerItemsList = new javax.swing.JList<>(playerInventory);
        jPlayerArmorClassLabel = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPlayerStrengthLabel = new javax.swing.JLabel();
        jPlayerDexterityLabel = new javax.swing.JLabel();
        jPlayerConstitutionLabel = new javax.swing.JLabel();
        jPlayerIntelligenceLabel = new javax.swing.JLabel();
        jPlayerWisdomLabel = new javax.swing.JLabel();
        jPlayerCharismaLabel = new javax.swing.JLabel();
        jPlayerClassLabel = new javax.swing.JLabel();
        jAddItemButton = new javax.swing.JButton();
        jRemoveItemButton = new javax.swing.JButton();
        jGoldLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPartyList = new javax.swing.JList<>(partyList);
        jPartyNameLabel = new javax.swing.JLabel();
        jSavePartyButton = new javax.swing.JButton();
        jLoadPartyButton = new javax.swing.JButton();
        jLootButton = new javax.swing.JButton();
        jNewPartyMemberButton = new javax.swing.JButton();
        jRemovePartyMemberButton = new javax.swing.JButton();
        jNewEncounterButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPlayerPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPlayerNameLabel.setText("Name");

        jPlayerHealthProgressBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPlayerHealthProgressBarMouseClicked(evt);
            }
        });

        jPlayerHealthLabel.setText("0/0");
        jPlayerHealthLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPlayerHealthLabelMouseClicked(evt);
            }
        });

        jScrollPane2.setViewportView(jPlayerItemsList);

        jPlayerArmorClassLabel.setText("AC: 0");

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPlayerStrengthLabel.setText("Str: 0");

        jPlayerDexterityLabel.setText("Dex: 0");

        jPlayerConstitutionLabel.setText("Con: 0");

        jPlayerIntelligenceLabel.setText("Int: 0");

        jPlayerWisdomLabel.setText("Wis: 0");

        jPlayerCharismaLabel.setText("Cha: 0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPlayerStrengthLabel)
                    .addComponent(jPlayerDexterityLabel)
                    .addComponent(jPlayerCharismaLabel)
                    .addComponent(jPlayerWisdomLabel)
                    .addComponent(jPlayerIntelligenceLabel)
                    .addComponent(jPlayerConstitutionLabel))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jPlayerStrengthLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPlayerDexterityLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPlayerConstitutionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPlayerIntelligenceLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPlayerWisdomLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPlayerCharismaLabel)
                .addContainerGap())
        );

        jPlayerClassLabel.setText("Race & Class");

        jAddItemButton.setText("Add Item");
        jAddItemButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jAddItemButtonMouseClicked(evt);
            }
        });

        jRemoveItemButton.setText("Remove Item");
        jRemoveItemButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRemoveItemButtonMouseClicked(evt);
            }
        });

        jGoldLabel.setText("Gold: 0");
        jGoldLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jGoldLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPlayerPanelLayout = new javax.swing.GroupLayout(jPlayerPanel);
        jPlayerPanel.setLayout(jPlayerPanelLayout);
        jPlayerPanelLayout.setHorizontalGroup(
            jPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPlayerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPlayerPanelLayout.createSequentialGroup()
                        .addComponent(jPlayerNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPlayerClassLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                    .addGroup(jPlayerPanelLayout.createSequentialGroup()
                        .addGroup(jPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPlayerArmorClassLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRemoveItemButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPlayerPanelLayout.createSequentialGroup()
                                .addComponent(jGoldLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60))))
                    .addGroup(jPlayerPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jAddItemButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPlayerPanelLayout.createSequentialGroup()
                        .addComponent(jPlayerHealthLabel)
                        .addGap(18, 18, 18)
                        .addComponent(jPlayerHealthProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPlayerPanelLayout.setVerticalGroup(
            jPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPlayerPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPlayerHealthProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jPlayerNameLabel)
                        .addComponent(jPlayerHealthLabel)
                        .addComponent(jPlayerClassLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPlayerPanelLayout.createSequentialGroup()
                        .addGroup(jPlayerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jPlayerArmorClassLabel)
                            .addComponent(jGoldLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(23, 23, 23))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPlayerPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jAddItemButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRemoveItemButton)))
                .addContainerGap())
        );

        jPartyList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jPartyListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jPartyList);

        jPartyNameLabel.setText("Party");

        jSavePartyButton.setText("Save");
        jSavePartyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSavePartyButtonMouseClicked(evt);
            }
        });

        jLoadPartyButton.setText("Load");
        jLoadPartyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLoadPartyButtonMouseClicked(evt);
            }
        });

        jLootButton.setText("Loot");
        jLootButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLootButtonMouseClicked(evt);
            }
        });

        jNewPartyMemberButton.setText("New Party Member");
        jNewPartyMemberButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jNewPartyMemberButtonMouseClicked(evt);
            }
        });

        jRemovePartyMemberButton.setText("Remove Selected Party Member");
        jRemovePartyMemberButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRemovePartyMemberButtonMouseClicked(evt);
            }
        });

        jNewEncounterButton.setText("New Encounter");
        jNewEncounterButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jNewEncounterButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 20, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPartyNameLabel)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jPlayerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLootButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jRemovePartyMemberButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jNewPartyMemberButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(32, 32, 32)
                                .addComponent(jNewEncounterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSavePartyButton, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLoadPartyButton, javax.swing.GroupLayout.Alignment.TRAILING))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPlayerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLootButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jPartyNameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jNewPartyMemberButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jRemovePartyMemberButton))
                        .addComponent(jNewEncounterButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSavePartyButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLoadPartyButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPlayerHealthProgressBarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPlayerHealthProgressBarMouseClicked
        if (jPartyList.isSelectionEmpty()) {
            return;
        }
        Player character = model.getParty().get(jPartyList.getSelectedIndex());
        String input = JOptionPane.showInputDialog(null, "Enter healing amount (negative to damage):");
        boolean isNegative = false;
        if (input.charAt(0) == '-') {
            input = input.substring(1);
            isNegative = true;
        }
        if (isInteger(input)) {
            int amount = Integer.parseInt(input);
            if (isNegative) {
                character.setHealth(character.getHealth() - amount);
            } else {
                character.setHealth(character.getHealth() + amount);
            }

            //Refresh display
            jPlayerHealthLabel.setText(Integer.toString(character.getHealth()) + "/" + Integer.toString(character.getMaxHealth()));
            //Health bar
            jPlayerHealthProgressBar.setMinimum(0);
            jPlayerHealthProgressBar.setMaximum(character.getMaxHealth());
            jPlayerHealthProgressBar.setValue(character.getHealth());
        }
    }//GEN-LAST:event_jPlayerHealthProgressBarMouseClicked

    private void jPlayerHealthLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPlayerHealthLabelMouseClicked
        if (jPartyList.isSelectionEmpty()) {
            return;
        }
        Player character = model.getParty().get(jPartyList.getSelectedIndex());
        String input = JOptionPane.showInputDialog(null, "Enter healing amount (negative to damage):");
        boolean isNegative = false;
        if (input.charAt(0) == '-') {
            input = input.substring(1);
            isNegative = true;
        }
        if (isInteger(input)) {
            int amount = Integer.parseInt(input);
            if (isNegative) {
                character.setHealth(character.getHealth() - amount);
            } else {
                character.setHealth(character.getHealth() + amount);
            }

            //Refresh display
            jPlayerHealthLabel.setText(Integer.toString(character.getHealth()) + "/" + Integer.toString(character.getMaxHealth()));
            //Health bar
            jPlayerHealthProgressBar.setMinimum(0);
            jPlayerHealthProgressBar.setMaximum(character.getMaxHealth());
            jPlayerHealthProgressBar.setValue(character.getHealth());
        }
    }//GEN-LAST:event_jPlayerHealthLabelMouseClicked

    private void jAddItemButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jAddItemButtonMouseClicked
        if (jPartyList.isSelectionEmpty()) {
            return;
        }

        //Add item
        String itemName = JOptionPane.showInputDialog(null, "Enter item name:");
        model.getParty().get(jPartyList.getSelectedIndex()).addToInventory(itemName);

        //Reset Inventory display
        playerInventory.clear();
        for (String item : model.getParty().get(jPartyList.getSelectedIndex()).getInventory()) {
            playerInventory.addElement(item);
        }
    }//GEN-LAST:event_jAddItemButtonMouseClicked

    private void jRemoveItemButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRemoveItemButtonMouseClicked
        if (jPlayerItemsList.isSelectionEmpty()) {
            return;
        }
        if (jPartyList.isSelectionEmpty()) {
            return;
        }
        model.getParty().get(jPartyList.getSelectedIndex()).removeFromInventory(jPlayerItemsList.getSelectedValue());

        //Reset inventory display
        playerInventory.clear();
        for (String item : model.getParty().get(jPartyList.getSelectedIndex()).getInventory()) {
            playerInventory.addElement(item);
        }
    }//GEN-LAST:event_jRemoveItemButtonMouseClicked

    private void jGoldLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jGoldLabelMouseClicked
        if (jPartyList.isSelectionEmpty()) {
            return;
        }
        String input = JOptionPane.showInputDialog(null, "Enter gold to give (negative to take):");
        boolean isNegative = false;
        if (input.charAt(0) == '-') {
            input = input.substring(1);
            isNegative = true;
        }
        Player temp = (Player) model.getParty().get(jPartyList.getSelectedIndex());
        if (isInteger(input)) {
            int amount = Integer.parseInt(input);
            if (isNegative) {
                temp.setGold(temp.getGold() - amount);
            } else {
                temp.setGold(temp.getGold() + amount);
            }
            //Reset display
            jGoldLabel.setText("Gold: " + temp.getGold());
        }
    }//GEN-LAST:event_jGoldLabelMouseClicked

    private void jPartyListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jPartyListValueChanged
        // Display stats for selected character

        if (jPartyList.isSelectionEmpty()) {
            jPlayerNameLabel.setText("-");
            jPlayerClassLabel.setText("-");
            jPlayerHealthLabel.setText("- / -");
            jPlayerHealthProgressBar.setMinimum(0);
            jPlayerHealthProgressBar.setMaximum(0);
            jPlayerHealthProgressBar.setValue(0);
            jGoldLabel.setText("-");
            jPlayerArmorClassLabel.setText("-");
            jPlayerStrengthLabel.setText("Str: -");
            jPlayerDexterityLabel.setText("Dex: -");
            jPlayerConstitutionLabel.setText("Con: -");
            jPlayerIntelligenceLabel.setText("Int: -");
            jPlayerWisdomLabel.setText("Wis: -");
            jPlayerCharismaLabel.setText("Cha: -");
            playerInventory.clear();
            return;
        }

        Player player = model.getParty().get(jPartyList.getSelectedIndex());

        //Name
        jPlayerNameLabel.setText(player.getName());

        //Race & Class
        jPlayerClassLabel.setText(player.getRace() + " " + player.getPlayerClass());

        //Gold
        jGoldLabel.setText("Gold: " + player.getGold());

        //AbilityScores
        jPlayerStrengthLabel.setText("Str: " + player.getStrength());
        jPlayerDexterityLabel.setText("Dex: " + player.getDexterity());
        jPlayerConstitutionLabel.setText("Con: " + player.getConstitution());
        jPlayerIntelligenceLabel.setText("Int: " + player.getIntelligence());
        jPlayerWisdomLabel.setText("Wis: " + player.getWisdom());
        jPlayerCharismaLabel.setText("Cha: " + player.getCharisma());

        //Health
        jPlayerHealthLabel.setText(Integer.toString(player.getHealth()) + "/" + Integer.toString(player.getMaxHealth()));
        //Health bar
        jPlayerHealthProgressBar.setMinimum(0);
        jPlayerHealthProgressBar.setMaximum(player.getMaxHealth());
        jPlayerHealthProgressBar.setValue(player.getHealth());

        //AC
        jPlayerArmorClassLabel.setText("AC: " + Integer.toString(player.getArmorClass()));

        //Inventory
        playerInventory.clear();
        for (String item : player.getInventory()) {
            playerInventory.addElement(item);
        }
    }//GEN-LAST:event_jPartyListValueChanged

    private void jNewPartyMemberButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jNewPartyMemberButtonMouseClicked
        NewPlayerWindow newPlayerWindow = new NewPlayerWindow(model, this);
        newPlayerWindow.setVisible(true);
    }//GEN-LAST:event_jNewPartyMemberButtonMouseClicked

    private void jLootButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLootButtonMouseClicked
        LootWindow lootWindow = new LootWindow(model, this);
        lootWindow.setVisible(true);
    }//GEN-LAST:event_jLootButtonMouseClicked

    private void jNewEncounterButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jNewEncounterButtonMouseClicked
        EncounterWindow encounterWindow = new EncounterWindow(model, this);
        encounterWindow.setVisible(true);
    }//GEN-LAST:event_jNewEncounterButtonMouseClicked

    private void jRemovePartyMemberButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRemovePartyMemberButtonMouseClicked
        if (jPartyList.isSelectionEmpty()) {
            return;
        }
        Player player = model.getParty().get(jPartyList.getSelectedIndex());
        int result = JOptionPane.showConfirmDialog(null, "Are you sure you want to erase " + player.getName());
        if (result == JOptionPane.YES_OPTION) {
            model.removePartyMember(model.getParty().get(jPartyList.getSelectedIndex()));
            JOptionPane.showMessageDialog(null, player.getName() + " was successfully deleted.");
            //Refresh party list
            partyList.clear();
            for (Player play : model.getParty()) {
                partyList.addElement(play.getName());
            }
        }

    }//GEN-LAST:event_jRemovePartyMemberButtonMouseClicked

    private void jSavePartyButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSavePartyButtonMouseClicked
        SaveWindow saveWindow = new SaveWindow(model);
        saveWindow.setVisible(true);
    }//GEN-LAST:event_jSavePartyButtonMouseClicked

    private void jLoadPartyButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLoadPartyButtonMouseClicked
        LoadWindow loadWindow = new LoadWindow(model, this);
        loadWindow.setVisible(true);
    }//GEN-LAST:event_jLoadPartyButtonMouseClicked

    public void refresh() {
        //Refresh party list
        partyList.clear();
        for (Player player : model.getParty()) {
            partyList.addElement(player.getName());
        }
    }

    private static boolean isInteger(String string) {
        if (string.isEmpty()) {
            return false;
        }
        char[] characters = string.toCharArray();
        for (char character : characters) {
            if (!(character == '0' || character == '1' || character == '2' || character == '3' || character == '4' || character == '5' || character == '6' || character == '7' || character == '8' || character == '9')) {
                return false;
            }
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jAddItemButton;
    private javax.swing.JLabel jGoldLabel;
    private javax.swing.JButton jLoadPartyButton;
    private javax.swing.JButton jLootButton;
    private javax.swing.JButton jNewEncounterButton;
    private javax.swing.JButton jNewPartyMemberButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JList<String> jPartyList;
    private javax.swing.JLabel jPartyNameLabel;
    private javax.swing.JLabel jPlayerArmorClassLabel;
    private javax.swing.JLabel jPlayerCharismaLabel;
    private javax.swing.JLabel jPlayerClassLabel;
    private javax.swing.JLabel jPlayerConstitutionLabel;
    private javax.swing.JLabel jPlayerDexterityLabel;
    private javax.swing.JLabel jPlayerHealthLabel;
    private javax.swing.JProgressBar jPlayerHealthProgressBar;
    private javax.swing.JLabel jPlayerIntelligenceLabel;
    private javax.swing.JList<String> jPlayerItemsList;
    private javax.swing.JLabel jPlayerNameLabel;
    private javax.swing.JPanel jPlayerPanel;
    private javax.swing.JLabel jPlayerStrengthLabel;
    private javax.swing.JLabel jPlayerWisdomLabel;
    private javax.swing.JButton jRemoveItemButton;
    private javax.swing.JButton jRemovePartyMemberButton;
    private javax.swing.JButton jSavePartyButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}
